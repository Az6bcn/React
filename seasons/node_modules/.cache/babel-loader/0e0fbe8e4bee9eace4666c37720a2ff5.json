{"ast":null,"code":"var _jsxFileName = \"/Users/Odumosu/Documents/React/seasons/src/index.js\";\nimport React from 'react';\nimport reactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  }\n\n  // good place to do data loading/fetching\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n      const lat = position.coords.latitude; // we call setState to update our component!!\n\n      this.setState({\n        lat\n      });\n    }, error => {\n      console.log(error);\n      const errorMessage = error.message;\n      this.setState({\n        errorMessage\n      });\n    });\n  } // good place to do data loading/fetching every single time that a user interact with our UI\n\n\n  componentDidUpdate() {\n    console.log('My compoent was just updated - it rerendered');\n  }\n\n  componentWillMount() {} // React says we have to define render!!\n\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }\n      }, \"Error: \", this.state.errorMessage, \" \");\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return /*#__PURE__*/React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, \"Loading!\");\n  }\n\n}\nreactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/Odumosu/Documents/React/seasons/src/index.js"],"names":["React","reactDOM","SeasonDisplay","App","Component","state","lat","errorMessage","componentDidMount","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","setState","error","message","componentDidUpdate","componentWillMount","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAGA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,YAAY,EAAE;AAA1B,KAD0B;AAAA;;AAGpC;AACAC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACKC,QAAD,IAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMN,GAAG,GAAGM,QAAQ,CAACG,MAAT,CAAgBC,QAA5B,CAFU,CAGV;;AACA,WAAKC,QAAL,CAAc;AAACX,QAAAA;AAAD,OAAd;AACH,KANL,EAOKY,KAAD,IAAW;AACPL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,YAAMX,YAAY,GAAGW,KAAK,CAACC,OAA3B;AACA,WAAKF,QAAL,CAAc;AAACV,QAAAA;AAAD,OAAd;AACH,KAXL;AAaH,GAlBmC,CAoBpC;;;AACAa,EAAAA,kBAAkB,GAAE;AAChBP,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH;;AAGDO,EAAAA,kBAAkB,GAAE,CAEnB,CA5BmC,CA8BpC;;;AACAC,EAAAA,MAAM,GAAG;AAGL,QAAG,KAAKjB,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,MAAP;AACH;;AAED,QAAG,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,0BAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;;AA3CmC;AA+CxCL,QAAQ,CAACqB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport reactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\n\n\nexport class App extends React.Component{\n      state = {lat: null, errorMessage: ''};\n\n    // good place to do data loading/fetching\n    componentDidMount(){\n        navigator.geolocation.getCurrentPosition(\n            (position) => {\n                console.log(position);\n                const lat = position.coords.latitude;\n                // we call setState to update our component!!\n                this.setState({lat})\n            }, \n            (error) => {\n                console.log(error)\n                const errorMessage = error.message;\n                this.setState({errorMessage})\n            }\n        );\n    }\n\n    // good place to do data loading/fetching every single time that a user interact with our UI\n    componentDidUpdate(){\n        console.log('My compoent was just updated - it rerendered');\n    }\n\n\n    componentWillMount(){\n\n    }\n\n    // React says we have to define render!!\n    render() {\n\n        \n        if(this.state.errorMessage && !this.state.lat){\n            return <div>Error: {this.state.errorMessage} </div>\n        }\n\n        if(!this.state.errorMessage && this.state.lat){\n            return <SeasonDisplay lat={this.state.lat} />\n        }\n\n        return <div>Loading!</div>;\n    };\n}\n\n\nreactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}