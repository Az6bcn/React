{"ast":null,"code":"var _jsxFileName = \"/Users/Odumosu/Documents/React/seasons/src/index.js\";\nimport React from 'react';\nimport reactDOM from 'react-dom';\nexport class App extends React.Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props); // initialise state: this is the only time we do direct assignment to this.state\n\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n      const lat = position.coords.latitude; // we call setState to update our component!!\n\n      this.setState({\n        lat\n      });\n    }, error => {\n      console.log(error);\n      const errorMessage = error.message;\n      this.setState({\n        errorMessage\n      });\n    });\n  } // React says we have to define render!!\n\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, \"Error: \", this.state.errorMessage, \" \");\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }\n      }, \"Latitude: \", this.state.lat, \" \");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, \"Loading!\");\n  }\n\n}\nreactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/Odumosu/Documents/React/seasons/src/index.js"],"names":["React","reactDOM","App","Component","constructor","props","state","lat","errorMessage","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","setState","error","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAGA,OAAO,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AACpC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAGd;;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,YAAY,EAAE;AAA1B,KAAb;AAEAC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACKC,QAAD,IAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAML,GAAG,GAAGK,QAAQ,CAACG,MAAT,CAAgBC,QAA5B,CAFU,CAGV;;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA;AAAD,OAAd;AACH,KANL,EAOKW,KAAD,IAAW;AACPL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,YAAMV,YAAY,GAAGU,KAAK,CAACC,OAA3B;AACA,WAAKF,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AACH,KAXL;AAaH,GArBmC,CAyBpC;;;AACAY,EAAAA,MAAM,GAAG;AAEL,QAAG,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,MAAP;AACH;;AAED,QAAG,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKD,KAAL,CAAWC,GAA3B,MAAP;AACH;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;;AArCmC;AAyCxCN,QAAQ,CAACmB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport reactDOM from 'react-dom';\n\n\nexport class App extends React.Component{\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props){\n        super(props);\n\n        // initialise state: this is the only time we do direct assignment to this.state\n        this.state = {lat: null, errorMessage: ''};\n\n        navigator.geolocation.getCurrentPosition(\n            (position) => {\n                console.log(position);\n                const lat = position.coords.latitude;\n                // we call setState to update our component!!\n                this.setState({lat})\n            }, \n            (error) => {\n                console.log(error)\n                const errorMessage = error.message;\n                this.setState({errorMessage})\n            }\n        );\n    }\n\n    \n\n    // React says we have to define render!!\n    render() {\n\n        if(this.state.errorMessage && !this.state.lat){\n            return <div>Error: {this.state.errorMessage} </div>\n        }\n\n        if(!this.state.errorMessage && this.state.lat){\n            return <div>Latitude: {this.state.lat} </div>\n        }\n\n        return <div>Loading!</div>;\n    };\n}\n\n\nreactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}