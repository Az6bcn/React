{"ast":null,"code":"var _jsxFileName = \"/Users/Odumosu/Documents/React/seasons/src/index.js\";\nimport React from 'react';\nimport reactDOM from 'react-dom';\nexport class App extends React.Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props); // initialise state: this is the only time we do direct assignment to this.state\n\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  } // good place to do data loading/fetching\n\n\n  componentDidMount() {} // good place to do data loading/fetching every single time that a user interact with our UI\n\n\n  componentDidUpdate() {\n    console.log('My compoent was just updated - it rerendered');\n  }\n\n  componentWillMount() {} // React says we have to define render!!\n\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }\n      }, \"Error: \", this.state.errorMessage, \" \");\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }\n      }, \"Latitude: \", this.state.lat, \" \");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    }, \"Loading!\");\n  }\n\n}\nreactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/Odumosu/Documents/React/seasons/src/index.js"],"names":["React","reactDOM","App","Component","constructor","props","state","lat","errorMessage","componentDidMount","componentDidUpdate","console","log","componentWillMount","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAGA,OAAO,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AACpC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAGd;;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,YAAY,EAAE;AAA1B,KAAb;AAGH,GATmC,CAWpC;;;AACAC,EAAAA,iBAAiB,GAAE,CAElB,CAdmC,CAgBpC;;;AACAC,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH;;AAGDC,EAAAA,kBAAkB,GAAE,CAEnB,CAxBmC,CA0BpC;;;AACAC,EAAAA,MAAM,GAAG;AAEL,QAAG,KAAKR,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,MAAP;AACH;;AAED,QAAG,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKD,KAAL,CAAWC,GAA3B,MAAP;AACH;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;;AAtCmC;AA0CxCN,QAAQ,CAACa,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport reactDOM from 'react-dom';\n\n\nexport class App extends React.Component{\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props){\n        super(props);\n\n        // initialise state: this is the only time we do direct assignment to this.state\n        this.state = {lat: null, errorMessage: ''};\n\n        \n    }\n\n    // good place to do data loading/fetching\n    componentDidMount(){\n        \n    }\n\n    // good place to do data loading/fetching every single time that a user interact with our UI\n    componentDidUpdate(){\n        console.log('My compoent was just updated - it rerendered');\n    }\n\n\n    componentWillMount(){\n\n    }\n\n    // React says we have to define render!!\n    render() {\n\n        if(this.state.errorMessage && !this.state.lat){\n            return <div>Error: {this.state.errorMessage} </div>\n        }\n\n        if(!this.state.errorMessage && this.state.lat){\n            return <div>Latitude: {this.state.lat} </div>\n        }\n\n        return <div>Loading!</div>;\n    };\n}\n\n\nreactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}