{"ast":null,"code":"var _jsxFileName = \"/Users/Odumosu/Documents/React/seasons/src/index.js\";\nimport React from 'react';\nimport reactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 14\n        }\n      }, \"Error: \", this.state.errorMessage, \" \");\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return /*#__PURE__*/React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Spinner, {\n      message: \"Please accept location request\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  } // React says we have to define render!!\n\n\n  render() {} // good place to do data loading/fetching\n\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n      const lat = position.coords.latitude; // we call setState to update our component!!\n\n      this.setState({\n        lat\n      });\n    }, error => {\n      console.log(error);\n      const errorMessage = error.message;\n      this.setState({\n        errorMessage\n      });\n    });\n  } // good place to do data loading/fetching every single time that a user interact with our UI\n\n\n  componentDidUpdate() {\n    console.log('My compoent was just updated - it rerendered');\n  }\n\n  componentWillMount() {}\n\n}\nreactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/Odumosu/Documents/React/seasons/src/index.js"],"names":["React","reactDOM","SeasonDisplay","Spinner","App","Component","state","lat","errorMessage","renderContent","render","componentDidMount","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","setState","error","message","componentDidUpdate","componentWillMount","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAaC,MAAAA,YAAY,EAAE;AAA3B,KAD+B;AAAA;;AAGvCC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKH,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,MAAP;AACD;;AAED,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,0BAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBAAO,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAbsC,CAevC;;;AACAG,EAAAA,MAAM,GAAG,CAAE,CAhB4B,CAkBvC;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACGC,QAAD,IAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,YAAMR,GAAG,GAAGQ,QAAQ,CAACG,MAAT,CAAgBC,QAA5B,CAFY,CAGZ;;AACA,WAAKC,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AACD,KANH,EAOGc,KAAD,IAAW;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,YAAMb,YAAY,GAAGa,KAAK,CAACC,OAA3B;AACA,WAAKF,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACD,KAXH;AAaD,GAjCsC,CAmCvC;;;AACAe,EAAAA,kBAAkB,GAAG;AACnBP,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACD;;AAEDO,EAAAA,kBAAkB,GAAG,CAAE;;AAxCgB;AA2CzCvB,QAAQ,CAACS,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBe,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport reactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nexport class App extends React.Component {\n  state = { lat: null, errorMessage: '' };\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage} </div>;\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat} />;\n    }\n\n    return <Spinner message=\"Please accept location request\" />;\n  }\n\n  // React says we have to define render!!\n  render() {}\n\n  // good place to do data loading/fetching\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        console.log(position);\n        const lat = position.coords.latitude;\n        // we call setState to update our component!!\n        this.setState({ lat });\n      },\n      (error) => {\n        console.log(error);\n        const errorMessage = error.message;\n        this.setState({ errorMessage });\n      }\n    );\n  }\n\n  // good place to do data loading/fetching every single time that a user interact with our UI\n  componentDidUpdate() {\n    console.log('My compoent was just updated - it rerendered');\n  }\n\n  componentWillMount() {}\n}\n\nreactDOM.render(<App />, document.querySelector('#root'));\n"]},"metadata":{},"sourceType":"module"}